int partition(int arr[], int l, int h){
    int x;
    int i;
    int j;
    int t;
    x = arr[h];
    i = l - 1;
    j = l;
    while(j <= h - 1) {
	if(arr[j] <= x) {
	    i = i + 1;
	    t = arr[i];
	    arr[i] = arr[j];
	    arr[j] = t;
	}
	j = j + 1;
    }
    t = arr[i + 1];
    arr[i + 1] = arr[h];
    arr[h] = t;
    return i + 1;
}
void quicksort(int arr[], int start, int end){
    int pos;
    if (start<end){
        pos = partition(arr, start, end);
        quicksort(arr,start,pos-1);
        quicksort(arr,pos+1,end);
    }
    return;
}
int main(void){
    int i;
    int arr[10000];
    int N;
    N = input();
    i = 0;
    while(i < N) {
	    arr[i] = input();
	    i = i + 1;
    }
    quicksort(arr,0,N-1);
    i = 0;
    while(i < N) {
	    output(arr[i]);
	    i = i + 1;
    }
    return 0;
}
